import org.gradle.api.plugins.quality.Checkstyle
import org.gradle.testing.jacoco.tasks.JacocoCoverageVerification
import org.gradle.testing.jacoco.tasks.JacocoReport

allprojects {
    group = 'io.fluxgate'
    version = '0.1.0'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
        finalizedBy(tasks.named('jacocoTestReport'))
    }

    jacoco {
        toolVersion = '0.8.11'
    }

    tasks.withType(JacocoReport).configureEach {
        dependsOn(tasks.withType(Test))
        reports {
            xml.required = true
            csv.required = false
            html.required = true
        }
        onlyIf {
            executionData.files.any { it.exists() }
        }
    }

    tasks.withType(JacocoCoverageVerification).configureEach {
        dependsOn(tasks.withType(Test))
        violationRules {
            rule {
                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.80
                }
            }
        }
        onlyIf {
            executionData.files.any { it.exists() }
        }
    }

    tasks.named('check').configure {
        dependsOn(tasks.withType(JacocoCoverageVerification))
    }

    checkstyle {
        toolVersion = '10.12.4'
        configDirectory.set(file("$rootDir/config/checkstyle"))
    }

    tasks.withType(Checkstyle).configureEach {
        reports {
            xml.required = false
            html.required = true
        }
    }
}

project(':core') {
    dependencies {
        implementation 'org.slf4j:slf4j-api:2.0.12'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
        implementation 'org.yaml:snakeyaml:2.2'
        testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
        testImplementation 'org.assertj:assertj-core:3.25.3'
    }
}

project(':api') {
    dependencies {
        implementation project(':core')
        implementation 'org.slf4j:slf4j-api:2.0.12'
        testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
        testImplementation 'org.assertj:assertj-core:3.25.3'
    }
}

project(':adapters:resilience4j') {
    dependencies {
        implementation project(':core')
    }
}

project(':adapters:resilience4j') {
    dependencies {
        implementation project(':core')
    }
}

project(':examples') {
    dependencies {
        implementation project(':api')
        implementation 'com.sparkjava:spark-core:2.9.4'
        implementation 'org.slf4j:slf4j-simple:2.0.12'
    }
}

project(':test') {
    dependencies {
        testImplementation project(':api')
        testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
        testImplementation 'org.assertj:assertj-core:3.25.3'
    }
}
