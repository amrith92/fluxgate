name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run tests
        run: ./gradlew test --stacktrace

      - name: Assemble modules
        run: ./gradlew assemble --stacktrace

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fluxgate-jars
          path: '**/build/libs/*.jar'
          if-no-files-found: error

  release:
    name: Sign & Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Assemble modules
        run: ./gradlew assemble --stacktrace

      - name: Extract version
        id: version
        run: |
          ref="${GITHUB_REF_NAME}"
          echo "version=${ref#v}" >> "$GITHUB_OUTPUT"

      - name: Run JReleaser
        uses: jreleaser/release-action@v2
        with:
          arguments: release
        env:
          JRELEASER_PROJECT_VERSION: ${{ steps.version.outputs.version }}
          JRELEASER_TAG_NAME: ${{ github.ref_name }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.JRELEASER_GITHUB_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
